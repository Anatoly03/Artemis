# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
    level:
        ROOT: INFO
        de.tum.in.www1.artemis: INFO
        tech.jhipster: INFO
        org.springframework.web.socket.config: INFO
        liquibase: INFO
    logback:
        rollingpolicy:
            max-history: 90
            total-size-cap: "10GB"

management:
    endpoints:
        web:
            base-path: /management
            exposure:
                include: ['configprops', 'env', 'health', 'info', 'jhimetrics', 'logfile', 'loggers', 'prometheus', 'threaddump']
    endpoint:
        health:
            show-details: when_authorized
            roles: 'ROLE_ADMIN'
            probes:
                enabled: true
        jhimetrics:
            enabled: true
    info:
        git:
            mode: full
        java:
            enabled: true
        env:
            enabled: true
    health:
        mail:
            enabled: false # When using the MailService, configure an SMTP server and set this to true
        ldap:
            enabled: false # Disabled to prevent periodic health checks that lead to null pointer exceptions if the ldap is not configured or not active
        config:
            enabled: false # Disabled because we do not use a Spring Cloud Config Server
    metrics:
        export:
            # Prometheus is the default metrics server
            prometheus:
                enabled: true
                step: 60
        enable:
            http: true
            jvm: true
            logback: false
            process: true
            system: true
        distribution:
            percentiles-histogram:
                all: true
            percentiles:
                all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
        tags:
            application: ${spring.application.name}
        web:
            server:
                request:
                    autotime:
                        enabled: true

spring:
    application:
        name: Artemis
    devtools:
        livereload:
          enabled: false # we use Webpack dev server + BrowserSync for livereload
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        # username: PLEASE CHANGE THIS SECRET IN YOUR application-local.yml or ENV
        # password: PLEASE CHANGE THIS SECRET IN YOUR application-local.yml or ENV
        hikari:
            poolName: Hikari
            auto-commit: false
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
    jmx:
        enabled: false
    cloud:
        config:
            import-check:
                enabled: false
    data:
        jpa:
            repositories:
                bootstrap-mode: deferred
    jpa:
        database-platform: org.hibernate.dialect.MySQL8Dialect
        database: MYSQL
        open-in-view: false
        show-sql: false
        hibernate:
            ddl-auto: none
            naming:
                physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        properties:
            hibernate.jdbc.time_zone: UTC
            hibernate.id.new_generator_mappings: true
            hibernate.connection.provider_disables_autocommit: true
            hibernate.cache.use_second_level_cache: true
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: false
            # modify batch size as necessary
            hibernate.jdbc.batch_size: 25
            hibernate.order_inserts: true
            hibernate.order_updates: true
#            hibernate.query.fail_on_pagination_over_collection_fetch: true  # not appropriate in our case: https://vladmihalcea.com/hibernate-query-fail-on-pagination-over-collection-fetch/
            hibernate.query.in_clause_parameter_padding: true
            hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastLocalCacheRegionFactory
            hibernate.cache.use_minimal_puts: true
            hibernate.cache.hazelcast.instance_name: Artemis
            hibernate.cache.hazelcast.use_lite_member: true
    messages:
        basename: i18n/messages
    main:
        allow-bean-definition-overriding: true
        lazy-initialization: false
        allow-circular-references: true # TODO: we should deactivate this in the future, however currently securityConfiguration has a circular dependency to itself
    mvc:
        pathmatch:
            matching-strategy: ant_path_matcher # TODO: we should update all paths to support PathPatternParser, in particular ClientForwardResource
    task:
        execution:
            thread-name-prefix: artemis-task-
            pool:
                core-size: 2
                max-size: 50
                queue-capacity: 10000
        scheduling:
            thread-name-prefix: artemis-scheduling-
            pool:
                size: 2
    mail:
        host: localhost
        # username: PLEASE CHANGE THIS SECRET IN YOUR application-local.yml or ENV
        # password: PLEASE CHANGE THIS SECRET IN YOUR application-local.yml or ENV
        port: 25
    thymeleaf:
        mode: HTML
    output:
        ansi:
            enabled: always
    servlet:
        multipart:
            max-file-size: 20MB # this should match the value in /webapp/app/shared/constants/input.constants.ts MAX_FILE_SIZE
            max-request-size: 20MB
    lifecycle:
        timeout-per-shutdown-phase: 10
    websocket:
        broker:
            # username: PLEASE CHANGE THIS SECRET IN YOUR application-local.yml or ENV
            # password: PLEASE CHANGE THIS SECRET IN YOUR application-local.yml or ENV
            addresses: "" # Comma separated list of hosts and ports of the brokers (e.g. "localhost:61613,localhost:61614")
    hazelcast:
        interface: "127.0.0.1" # The interface to bind to, if non is set, all interfaces will be bound
        port: 5701 # The hazelcast port that this instance runs on and where other instances are expected
        localInstances: false # Whether the other instances are expected locally (in dev mode) or external
        phone:
            home:
                enabled: false
    autoconfigure:
        # These AutoConfiguration are excluded as they include metrics which are not evaluated and only cause unnecessary network load
        # They can be included once they are processed
        exclude:
          - org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration
          - org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration
          - org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration
          - org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration
          - org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration

hazelcast:
    phone:
        home:
            enabled: false

springdoc:
    api-docs:
        path: /api-docs
    swagger-ui:
        path: /api.html
        operationsSorter: method

server:
    port: 8080
    servlet:
        session:
            cookie:
                http-only: true
    shutdown: graceful
    forward-headers-strategy: native

sentry:
    logging:
        enabled: true
        minimum-breadcrumb-level: error
        minimum-event-level: error
    sample-rate: 1
    traces-sample-rate: 0.2

# Properties to be exposed on the /info management endpoint
info:
    guided-tour:
        courseShortName: 'artemistutorial'
        # TODO: following value missing on purpose in ansible? saw this when I moved the value here
        # Names of the tutorial groups that will be automatically added to newly created users
        course-group-students: 'artemis-artemistutorial-students'
        tours:
            -   cancel_tour: ''
            -   course_overview_tour: ''
            -   modeling_tour: 'UML Class Diagram'
            -   programming_exercise_success_tour: 'tutorial'
            # TODO: following value missing on purpose in ansible? saw this when I moved the value here
            -   tutor_assessment_tour: 'Patterns in Software Engineering'
    contact: artemis.in@tum.de  #default value, can be overridden if needed
    # Comma separated list of profiles that will trigger the ribbon to show
    display-ribbon-on-profiles: "dev"
    sentry:
        dsn: https://8c6b41ec2d4245e8bd3ec9541d53f625@sentry.io/1440029 # Leave empty to disable Sentry, must be a valid URI
    # Allowed Orion version range. Should only be changed on major version releases
    allowed-minimum-orion-version: 1.0.0
    student-exam-store-session-data: true

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
    clientApp:
        name: 'artemisApp'
    security:
        authentication:
            jwt:
                # This token must be encoded using Base64 (you can type `echo 'secret-key'|base64` on your command line)
                # As this is the PRODUCTION configuration, you MUST change the default key, and store it securely:
                # - In the JHipster Registry (which includes a Spring Cloud Config server)
                # - In a separate `application-prod.yml` file, in the same folder as your executable WAR file
                # - In the `JHIPSTER_SECURITY_AUTHENTICATION_JWT_BASE64_SECRET` environment variable
                # base64-secret: PLEASE CHANGE THIS SECRET IN YOUR application-local.yml or ENV
                token-validity-in-seconds: 86400 # Token is valid 24 hours
                token-validity-in-seconds-for-remember-me: 2592000 # Token is valid 30 days
    # By default CORS is disabled. Uncomment to enable.
    #cors:
        #allowed-origin-patterns: "*"
        #allowed-methods: "*"
        #allowed-headers: "*"
        #exposed-headers: "Authorization,Link,X-Total-Count"
        #allow-credentials: true
        #max-age: 1800
    registry:
        # password: PLEASE CHANGE THIS SECRET IN YOUR application-local.yml or ENV
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512
    audit-events:
        retention-period: 120 # Number of days before audit events are deleted.
    http:
        cache: # Used by the CachingHttpHeadersFilter
            timeToLiveInDays: 1461
    cache: # Cache configuration
        hazelcast: # Hazelcast distributed cache
            time-to-live-seconds: 3600
            backup-count: 1

# Eureka configuration
eureka:
    client:
        enabled: false
        service-url:
            defaultZone: http://admin:${jhipster.registry.password}@localhost:8761/eureka/
        healthcheck:
            enabled: false
        fetch-registry: true
        register-with-eureka: true
        instance-info-replication-interval-seconds: 10
        registry-fetch-interval-seconds: 10
    instance:
        prefer-ip-address: true
        appname: Artemis
        instanceId: Artemis:1
        lease-renewal-interval-in-seconds: 5
        lease-expiration-duration-in-seconds: 10
        status-page-url-path: ${management.endpoints.web.base-path}/info
        health-check-url-path: ${management.endpoints.web.base-path}/health
        metadata-map:
            zone: primary # This is needed for the load balancer
            profile: ${spring.profiles.active}
            version: #project.version#
            git-version: ${git.commit.id.describe:}
            git-commit: ${git.commit.id.abbrev:}
            git-branch: ${git.branch:}
