# ===================================================================
# Artemis specific properties
# ===================================================================

artemis:
    version: #project.version#
    course-archives-path: ./exports/courses         # a folder in which archived courses and exams are stored.
    repo-clone-path: ./repos                        # a folder in which git repos for the online code editor are stored. In a multi node setup, this folder should be in a shared file system area (e.g. based on NFS), so that user can access the same files over multiple nodes
    repo-download-clone-path: ./repos-download      # a temporary folder, in which git repos are downloaded that are immediately deleted afterwards (e.g. exports, plagiarism checks), should NOT be in a shared file system area
    file-upload-path: uploads
    submission-export-path: exports
    # LEGACY: arbitrary password for encrypting database values
    # encryption-password: PLEASE CHANGE THIS SECRET IN YOUR ENV OR application-local-secrets.yml
    bcrypt-salt-rounds: 11  # The number of salt rounds for the bcrypt password hashing. Lower numbers make it faster but more unsecure and vice versa.
                            # Please use the bcrypt benchmark tool to determine the best number of rounds for your system. https://github.com/ls1intum/bcrypt-Benchmark
    external-system-request:
        batch-size: 50  # wait the time below after 50 requests
        batch-waiting-time: 30000   # in ms = 30s
    user-management:
        use-external: false
        internal-admin:
            # username: PLEASE CHANGE THIS SECRET IN YOUR ENV OR application-local-secrets.yml
            # password: PLEASE CHANGE THIS SECRET IN YOUR ENV OR application-local-secrets.yml
        registration:               # the whole section is optional: whether user can register in Artemis
            enabled: false
            allowed-email-pattern: '[a-zA-Z0-9_\-\.\+]+@(tum\.de|in\.tum\.de|mytum\.de)'
            allowed-email-pattern-readable: '@tum.de, @in.tum.de, @mytum.de'
            cleanup-time-minutes: 60 # The amount of time until non-activated accounts are deleted automatically
        accept-terms: false     # whether users have to accept terms before they can log in, from a privacy point of view this is not needed during education, therefore the default value is false
        course-registration:                    # the whole section is optional: whether there is a restriction for the self-registration of students in courses
            allowed-username-pattern: '^([a-z]{2}\d{2}[a-z]{3})$'    # example for a TUM identifier, e.g. ab12cde
        login:
            account-name: TUM                   # optional: customization for the welcome page "please sign in with your <account-name> account"
    version-control:
        # TODO: can this be deleted here or should this be moved to application-bitbucket.yml?
        version-control-access-token: false # only for Gitlab setups: a Gitlab-API token can be generated for each user and used as part of the Git clone URL shown to students to allow for password-less Git operations via HTTP
    continuous-integration:
        # TODO: build-timeout just needed for jenkins?
        build-timeout: 30 # Does cancel jenkins builds after 30 minutes to remove build that get stuck
        # Defines the used docker images for certain programming languages.
        # For each language at least the `default` image has to be defined.
        # This `default` option will be overridden by more specific project type
        # definitions.
        build:
            images:
                java:
                    # possible overrides: maven, gradle
                    default: "ls1tum/artemis-maven-template:java17-11"
                kotlin:
                    # possible overrides: maven, gradle
                    default: "ls1tum/artemis-maven-template:java17-11"
                empty:
                    default: "ls1tum/artemis-maven-template:java17-11"
                python:
                    default: "ls1tum/artemis-python-docker:latest"
                c:
                    # possible overrides: gcc, fact
                    default: "ls1tum/artemis-c-docker:latest"
                    fact: "sharingcodeability/fact:latest"
                haskell:
                    default: "ghcr.io/b-fein/artemis-haskell:v19.30.0"
                vhdl:
                    default: "tizianleonhardt/era-artemis-vhdl:latest"
                assembler:
                    default: "tizianleonhardt/era-artemis-assembler:latest"
                swift:
                    # possible overrides: xcode
                    default: "norionomura/swiftlint:latest"
                ocaml:
                    default: "ls1tum/artemis-ocaml-docker:v1"
    git:
        name: Artemis
        email: artemis.in@tum.de

    # TODO: lti missing on purpose?
