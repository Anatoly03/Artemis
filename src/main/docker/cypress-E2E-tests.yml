# ----------------------------------------------------------------------------------------------------------------------
# Cypress Setup
# ----------------------------------------------------------------------------------------------------------------------

# TODO: this requires a newer docker compose version for the bamboo agents which is already requested
# for now we use 2.4 until this is fixed
version: '2.4'
services:
    mysql:
        extends:
            #TODO: use standard version of mysql.yml after docker compose version is upgraded
            file: mysql_compose_2_4.yml
            service: mysql

    artemis-app:
        extends:
            #TODO: use standard version of artemis.yml after docker compose version is upgraded
            file: ./artemis/artemis_compose_2_4.yml
            service: artemis-app
        depends_on:
            mysql:
                condition: service_healthy
        env_file:
            - ../resources/config/docker-cypress-application-local.env
        # TODO: after the pipeline is running on bamboo maybe also migrate/merge these environment variables
        environment:
            SPRING_PROFILES_ACTIVE: "artemis,bamboo,bitbucket,jira,prod,docker,cypress"
            SPRING_DATASOURCE_USERNAME: "root"
            SPRING_DATASOURCE_PASSWORD: ""
            ARTEMIS_USERMANAGEMENT_INTERNALADMIN_USERNAME: "${bamboo_artemis_admin_username}"
            ARTEMIS_USERMANAGEMENT_INTERNALADMIN_PASSWORD: "${bamboo_artemis_admin_password}"
            ARTEMIS_USERMANAGEMENT_EXTERNAL_URL: "https://jira-prelive.ase.in.tum.de"
            ARTEMIS_USERMANAGEMENT_EXTERNAL_USER: "${bamboo_jira_prelive_admin_user}"
            ARTEMIS_USERMANAGEMENT_EXTERNAL_PASSWORD: "${bamboo_jira_prelive_admin_password}"
            ARTEMIS_VERSIONCONTROL_URL: "https://bitbucket-prelive.ase.in.tum.de"
            ARTEMIS_VERSIONCONTROL_USER: "${bamboo_jira_prelive_admin_user}"
            ARTEMIS_VERSIONCONTROL_PASSWORD: "${bamboo_jira_prelive_admin_password}"
            ARTEMIS_CONTINUOUSINTEGRATION_URL: "https://bamboo-prelive.ase.in.tum.de"
            ARTEMIS_CONTINUOUSINTEGRATION_USER: "${bamboo_jira_prelive_admin_user}"
            ARTEMIS_CONTINUOUSINTEGRATION_PASSWORD: "${bamboo_jira_prelive_admin_password}"
            ARTEMIS_CONTINUOUSINTEGRATION_TOKEN: "${bamboo_ARTEMIS_CONTINUOUS_INTEGRATION_TOKEN_SECRET}"
            ARTEMIS_CONTINUOUSINTEGRATION_ARTEMISAUTHENTICATIONTOKENVALUE: "${bamboo_ARTEMIS_CONTINUOUS_INTEGRATION_ARTEMIS_AUTHENTICATION_TOKEN_VALUE_SECRET}"
            # for bamboo and bitbucket notifications on /api/programming-exercises/new-result it seems like port
            # 54321 is internally open for the bamboo agents
            # also can't use SSL for this as the hostnames are not integrated in the self-signed certificate
            SERVER_URL: "http://${HOST_HOSTNAME}:54321"
            SERVER_PORT: "54321"
        ports:
            - 54321:54321
        healthcheck:
            test: wget -nv -t1 --spider http://localhost:54321/actuator/health || exit 1

    artemis-cypress:
        # Cypress image with node and chrome browser installed (Cypress installation needs to be done separately because we require additional dependencies)
        image: cypress/browsers:node18.12.0-chrome107
        #TODO: uncomment this after Docker compose version upgrade
        #pull_policy: always
        depends_on:
            artemis-app:
                condition: service_healthy
        environment:
            CYPRESS_baseUrl: "http://artemis-app:54321"
            CYPRESS_adminUsername: "${bamboo_artemis_admin_username}"
            CYPRESS_adminPassword: "${bamboo_artemis_admin_password}"
            CYPRESS_username: "${bamboo_cypress_username_template}"
            CYPRESS_password: "${bamboo_cypress_password_template}"
            CYPRESS_allowGroupCustomization: "true"
            CYPRESS_studentGroupName: "artemis-e2etest-students"
            CYPRESS_tutorGroupName: "artemis-e2etest-tutors"
            CYPRESS_editorGroupName: "artemis-e2etest-editors"
            CYPRESS_instructorGroupName: "artemis-e2etest-instructors"
        command: sh -c "cd /app/artemis/src/test/cypress && chmod 777 /root && npm ci && npm run cypress:run"
        volumes:
            - ./../../../:/app/artemis
        networks:
            - artemis

networks:
    artemis:
        driver: "bridge"
        name: artemis

volumes:
    artemis-mysql-data:
        name: artemis-mysql-data
    artemis-data:
        name: artemis-data
